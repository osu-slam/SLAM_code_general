%% splice_babble
% Code to splice together .wav files generated by Google Text-To-Speech
% API. This version was written to combine segments of multitalker babble.
% MAKE SURE TO EQUALIZE RMS OF EACH SLICE BEFORE SPLICING!
% Author: MJH

% mm/dd/yyyy -- Changelog
% 01/10/2020 -- Created file. MJH
clearvars; clc
%% Parameters
target_fs = 44100; 
end_silence_sec = 0.675; % duration of silence at the end of each file

end_silence_samples = floor(target_fs*end_silence_sec); 

%% Pathing
dir_google = 'C:\Users\heard.49\Desktop\google_text'; 
cd(dir_google)

dirs_speaker = dir('speaker*'); % should be 4
numSpeakers = length(dirs_speaker);

%% Main code

for ss = 1:numSpeakers
    %% Preallocate
    this_dir = fullfile(dirs_speaker(ss).folder, dirs_speaker(ss).name); 
    files_wav = dir(fullfile(this_dir, '*.wav')); 
    
    numFiles = length(files_wav); 
    
    %% Shuffle the starting cut for each speaker
    order = 1:numFiles;
    order = [order(ss:end) order(1:ss-1)];
    
    ad_spliced = []; 
    
    for ff = order
        %% Load audio data
        disp(['Loading speaker ' num2str(ss) ' file ' num2str(ff)])
        this_file = fullfile(files_wav(ff).folder, files_wav(ff).name); 
        [ad, fs] = audioread(this_file); 
        
        assert(fs == target_fs) % checks that fs is same as target
        
        %% Trim extra silence at end
        numSamples = length(ad); 
        start_cut = numSamples - end_silence_samples;
        ad(start_cut:end) = []; 
        
        %% Splice audio into one file
        ad_spliced = [ad_spliced; ad]; 
        
    end
    
    %% Output spliced file
    disp('Writing spliced file...')
    filename = fullfile(dir_google, ...
        ['babble_speaker' num2str(ss) '_spliced.wav']); 
    
    audiowrite(filename, ad_spliced, fs); 
    disp('Done!')
    disp(' ')
end
